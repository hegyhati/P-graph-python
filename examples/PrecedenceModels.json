{
    "materials": {
        "FORBIDDENPRODUCT" : {
            "display_name" : "FORBIDDENPRODUCT",
            "description" : "Virtual raw material to easily exclude operating units for testing purposes."
        },
        "Yij-Free": {
            "display_name": "Yij-Free",
            "description": "Binary variable indicating whether task i is assigned to unit j for suitable i,j pairs.",
            "gmpl": "var Y{I_in_J} binary;"
        },
        "Yij-Allowing": {
            "display_name": "Yij-Allowing",
            "description": "Concept material indicating that all of the tasks are performed by at least one unit."
        },
        "Yij-Exact": {
            "display_name": "Yij-Exact",
            "description": "Concept material indicating that all of the tasks are performed by exactly one unit."
        },
        "Si-Exact": {
            "display_name": "Si-Exact",
            "description": "Continuous non-negative variable indicating the starting time of task i.",
            "gmpl": "var S{I} >= 0;"
        },
        "Ci-Free" : {
            "display_name" : "Ci-Free",
            "description" : "Non-negative continuous variable later used for the completion of a task.",
            "gmpl": "var C{I} >= 0;"
        },
        "Ci-Weak" : {
            "display_name" : "Ci-Weak",
            "description" : "Concept material indicating that Ci is at least Si"
        },
        "Ci-Allowing" : {
            "display_name" : "Ci-Allowing",
            "description" : "Concept material indicating that Ci is at least the completion time."
        },
        "Ci-Exact" : {
            "display_name" : "Ci-Exact",
            "description" : "Concept material indicating that Ci is exactly the completion time."
        },
        "MS-Free" : {
            "display_name" : "MS-Free",
            "description" : "Non-negative continuous variable later used for makespan.",
            "gmpl" : "var MS >= 0;"
        },
        "MS-Allowing" : {
            "display_name" : "MS",
            "description" : "Concept material indicating that MS is at least the makespan."
        },
        "UIS-Precedence" : {
            "display_name" : "UIS-Precedence",
            "description" : "Concept material indicating that all production precedences are met with UIS policy.",
            "incompatible" : "NIS-Precedence"
        },
        "NIS-Precedence" : {
            "display_name" : "NIS-Precedence",
            "description" : "Concept material indicating that all production precedences are met with NIS policy.",
            "incompatible" : "UIS-Precedence"
        },
        "Xijii-Free" : {
            "display_name": "Xijii-Free",
            "description": "Binary variables later used used for sequencing of two tasks assigneable to the same unit.",
            "gmpl" : "var X{I_in_J_before_II} binary;"
        },
        "Xijii-AtMost1IfAssigned" : {
            "display_name": "Xijii-AtMost1IfAssigned",
            "description": "Concept variable indicating that i cannot be scheduled before ii and ii before i at the same time on j if assigned."
        },
        "Xijii-AtMost1Always" : {
            "display_name": "Xijii-AtMost1Always",
            "description": "Concept variable indicating that i cannot be scheduled before ii and ii before i at the same time on j regardless of assignments."
        },
        "Xijii-AtLeast1IfAssigned" : {
            "display_name": "Xijii-AtLeast1IfAssigned",
            "description": "Concept variable indicating that either i is scheduled before ii or the other way around on j if assigned."
        },
        "Xijii-AtLeast1Always" : {
            "display_name": "Xijii-AtLeast1Always",
            "description": "Concept variable indicating that either i is scheduled before ii or the other way around on j regardless of assignments.",
            "incompatible" : ["Xijii-ZeroIfUnassigned"]
        },
        "Xijii-ZeroIfUnassigned" : {
            "display_name": "Xijii-ZeroIfUnassigned",
            "description": "Concept variable indicating that neither i is scheduled before ii or the other way around if either i or ii is assigned to another unit.",
            "incompatible" : ["Xijii-AtLeast1Always"]
        },
        "Sequencing" : {
            "display_name" : "Sequencing",
            "descreption": "Concept material indicating that tasks assigned to the same units do not overlap."
        }

    },
    "operating_units": [
        {
            "display_name": "Allowing Assignment",
            "inputs": [
                "Yij-Free"
            ],
            "outputs": [
                "Yij-Allowing"
            ],
            "description": "Constraint to enforce that each task is performed by at least one unit",
            "gmpl": "s.t. Allowing_Assignment {i in I} : sum {j in Ji[i]} Y[i,j] >= 1;"
        },
        {
            "display_name": "Exact Assignment",
            "inputs": [
                "Yij-Free"
            ],
            "outputs": [
                "Yij-Exact"
            ],
            "description": "Constraint to enforce that each task is performed by exactly one unit",
            "gmpl": "s.t. Exact_Assignment {i in I} : sum {j in Ji[i]} Y[i,j] = 1;"
        },
        {
            "display_name": "Yij-Exact => Yij-Allowing",
            "inputs": [
                "Yij-Exact"
            ],
            "outputs": [
                "Yij-Allowing"
            ],
            "description": "Logical O-node."
        },
        {
            "display_name": "Weak Completion",
            "inputs" : [
                "Si-Exact",
                "Ci-Free"
            ],
            "outputs" : [
                "Ci-Weak"
            ],
            "description" : "Constraint enforcing that a task must end later than it starts.",
            "gmpl" : "s.t. Weak_Completion {i in I} : C[i] >= S[i];"
        },
        {
            "display_name": "Allowing Completion",
            "inputs" : [
                "Si-Exact",
                "Ci-Free",
                "Yij-Allowing"
            ],
            "outputs" : [
                "Ci-Allowing"
            ],
            "description" : "Constraint enforcing that Ci is at least at completion.",
            "gmpl" : "s.t. Allowing_Completion {i in I} : C[i] >= S[i] + sum {j in Ji[i]} pt[i,j]*Y[i,j];"
        },
        {
            "display_name": "Allowing Completion per Unit",
            "inputs" : [
                "Si-Exact",
                "Ci-Free",
                "Yij-Allowing"
            ],
            "outputs" : [
                "Ci-Allowing"
            ],
            "description" : "Constraint enforcing that Ci is at least at completion.",
            "gmpl" : "s.t. Allowing_Completion_per_Unit {i in I, j in Ji[i]} : C[i] >= S[i] + pt[i,j]*Y[i,j];"
        },
        {
            "display_name": "Exact Completion",
            "inputs" : [
                "Si-Exact",
                "Ci-Free",
                "Yij-Allowing"
            ],
            "outputs" : [
                "Ci-Exact"
            ],
            "description" : "Constraint enforcing that Ci is at least at completion.",
            "gmpl" : "s.t. Exact_Completion {i in I} : C[i] = S[i] + sum {j in Ji[i]} pt[i,j]*Y[i,j];"
        },
        {
            "display_name": "Ci-Exact => Ci-Allowing",
            "inputs": [
                "Ci-Exact"
            ],
            "outputs": [
                "Ci-Allowing"
            ],
            "description": "Logical O-node."
        },
        {
            "display_name": "Ci-Allowing => Ci-Weak",
            "inputs": [
                "Ci-Allowing"
            ],
            "outputs": [
                "Ci-Weak"
            ],
            "description": "Logical O-node."
        },
        {
            "display_name" : "Makespan Setter by Completion",
            "inputs" : [
                "Ci-Allowing",
                "MS-Free"
            ],
            "outputs" : [
                "MS-Allowing"
            ],
            "description" : "Constraint enforcing MS to be later than latest completion.",
            "gmpl" : "s.t. Makespan_by_Completion {i in I}: MS >= C[i]; "
        },
        {
            "display_name" : "Makespan Setter by Start",
            "inputs" : [
                "Si-Exact",
                "Yij-Allowing",
                "MS-Free"
            ],
            "outputs" : [
                "MS-Allowing"
            ],
            "description" : "Constraint enforcing MS to be later than latest completion.",
            "gmpl" : "s.t. Makespan_by_Start {i in I}: MS >= S[i] + sum{j in Ji[i]} pt[i,j]*Y[i,j];"
        },
        {
            "display_name" : "Makespan Setter by Start per Unit",
            "inputs" : [
                "Si-Exact",
                "Yij-Allowing",
                "MS-Free"
            ],
            "outputs" : [
                "MS-Allowing"
            ],
            "description" : "Constraint enforcing MS to be later than latest completion.",
            "gmpl" : "s.t. Makespan_by_Start_per_Unit {i in I, j in Ji[i]}: MS >= S[i] + pt[i,j]*Y[i,j];"
        },
        {
            "display_name" : "Production Precedence by Completion UIS",
            "inputs":[
                "Si-Exact",
                "Ci-Allowing"
            ],
            "outputs":[
                "UIS-Precedence"
            ],
            "description" : "Constraint enforcing production precedences with UIS policy by completion variables.",
            "gmpl": "s.t. Precedence_by_Completion_UIS{ (i,ii) in I_precedes_II} : S[ii] >= C[i];"
        },
        {
            "display_name" : "Production Precedence by Start UIS",
            "inputs":[
                "Si-Exact",
                "Yij-Allowing"
            ],
            "outputs":[
                "UIS-Precedence"
            ],
            "description" : "Constraint enforcing production precedences with UIS policy by start variables.",
            "gmpl": "s.t. Precedence_by_Completion_UIS{ (i,ii) in I_precedes_II} : S[ii] >= S[i] + sum{j in Ji[i]} pt[i,j]*Y[i,j];"
        },
        {
            "display_name" : "Production Precedence by Start per Unit UIS",
            "inputs":[
                "Si-Exact",
                "Yij-Allowing"
            ],
            "outputs":[
                "UIS-Precedence"
            ],
            "description" : "Constraint enforcing production precedences with UIS policy by start variables per unit.",
            "gmpl": "s.t. Precedence_by_Completion_UIS{ (i,ii) in I_precedes_II, j in Ji[i]} : S[ii] >= S[i] + pt[i,j]*Y[i,j];"
        },
        {
            "display_name" : "Production Precedence by Completion NIS",
            "inputs":[
                "Si-Exact",
                "Ci-Exact"
            ],
            "outputs":[
                "NIS-Precedence"
            ],
            "description" : "Constraint enforcing production precedences with NIS policy by completion variables.",
            "gmpl": "s.t. Precedence_by_Completion_NIS{ (i,ii) in I_precedes_II} : S[ii] = C[i];"
        },
        {
            "display_name" : "Production Precedence by Start NIS",
            "inputs":[
                "Si-Exact",
                "Yij-Exact"
            ],
            "outputs":[
                "NIS-Precedence"
            ],
            "description" : "Constraint enforcing production precedences with NIS policy by start variables.",
            "gmpl": "s.t. Precedence_by_Completion_NIS{ (i,ii) in I_precedes_II} : S[ii] = S[i] + sum{j in Ji[i]} pt[i,j]*Y[i,j];"
        },
        {
            "display_name" : "Sequence at most in 1 direction if assigned",
            "inputs":[
                "Xijii-Free",
                "Yij-Allowing"
            ],
            "outputs":[
                "Xijii-AtMost1IfAssigned"
            ],
            "description" : "Constraint enforcing unit specific sequencing variables for same tasks not to be 1 in both directions if assigned to the unit.",
            "gmpl": "s.t. Sequence_At_Most_One_Direction_If_Assigned{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] + X[ii,j,i] <= 3 - Y[i,j] - Y[ii,j];"
        },
        {
            "display_name" : "Sequence at most in 1 direction always",
            "inputs":[
                "Xijii-Free"
            ],
            "outputs":[
                "Xijii-AtMost1Always"
            ],
            "description" : "Constraint enforcing unit specific sequencing variables for same tasks not to be 1 in both directions.",
            "gmpl": "s.t. Sequence_At_Most_One_Direction_Always{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] + X[ii,j,i] <= 1;"
        },
        {
            "display_name" : "Sequence at least in 1 direction if assigned",
            "inputs":[
                "Xijii-Free",
                "Yij-Allowing"
            ],
            "outputs":[
                "Xijii-AtLeast1IfAssigned"
            ],
            "description" : "Constraint enforcing that one direction of unit specific sequencing variables for same tasks has to be 1 if assigned to the unit.",
            "gmpl": "s.t. Sequence_At_Least_One_Direction_If_Assigned{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] + X[ii,j,i] >= Y[i,j] + Y[ii,j] - 1;"
        },
        {
            "display_name" : "Sequence at most in 1 direction always",
            "inputs":[
                "Xijii-Free"
            ],
            "outputs":[
                "Xijii-AtLeast1Always"
            ],
            "description" : "Constraint enforcing that one direction of unit specific sequencing variables for same tasks has to be 1.",
            "gmpl": "s.t. Sequence_At_Least_One_Direction_Always{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] + X[ii,j,i] >= 1;"
        },
        {
            "display_name" : "Sequence in exactly 1 direction always",
            "inputs":[
                "Xijii-Free"
            ],
            "outputs":[
                "Xijii-AtLeast1Always",
                "Xijii-AtMost1Always"
            ],
            "description" : "Constraint enforcing that exactly one direction of unit specific sequencing variables are 1 for the same tasks.",
            "gmpl": "s.t. Sequence_Exactly_One_Direction_Always{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] + X[ii,j,i] = 1;"
        },
        {
            "display_name" : "Sequence is 0 if either task is not assigned.",
            "inputs":[
                "Xijii-Free",
                "Yij-Allowing"
            ],
            "outputs":[
                "Xijii-ZeroIfUnassigned"
            ],
            "description" : "Constraint enforcing that unit specific sequencing variables are 0 if either tasks are assigned to another unit.",
            "gmpl": "s.t. Sequence_Zero_If_Not_Assigned{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] <= (Y[i,j] + Y[ii,j])/2;"
        },
        {
            "display_name" : "Sequence is 0 if either task is not assigned, task-wise.",
            "inputs":[
                "Xijii-Free",
                "Yij-Allowing"
            ],
            "outputs":[
                "Xijii-ZeroIfUnassigned"
            ],
            "description" : "Constraints enforcing that unit specific sequencing variables are 0 if either tasks are assigned to another unit.",
            "gmpl": "s.t. Sequence_Zero_If_Not_Assigned_TaskWise_1{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] <= Y[i,j]; s.t. Sequence_Zero_If_Not_Assigned_TaskWise_2{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] <= Y[ii,j];"
        },
        {
            "display_name" : "Sequence is 0 in both directions if either task is not assigned, task-wise.",
            "inputs":[
                "Xijii-Free",
                "Yij-Allowing"
            ],
            "outputs":[
                "Xijii-ZeroIfUnassigned"
            ],
            "description" : "Constraint enforcing that unit specific sequencing variables are 0 if either tasks are assigned to another unit.",
            "gmpl": "s.t. Sequence_Zero_If_Not_Assigned_TaskWise_BothDirection{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] + X[ii,j,i] <= 2 * Y[i,j]; "
        },
        {
            "display_name" : "Sequence is 0 in both directions if either task is not assigned, task-wise, otherwise at most one of them is 1",
            "inputs":[
                "Xijii-Free",
                "Yij-Allowing"
            ],
            "outputs":[
                "Xijii-ZeroIfUnassigned",
                "Xijii-AtMost1IfAssigned"
            ],
            "description" : "Constraint enforcing that unit specific sequencing variables are 0 if either tasks are assigned to another unit.",
            "gmpl": "s.t. Sequence_Zero_If_Not_Assigned_TaskWise_BothDirection{ (i,j,ii) in I_in_J_before_II} : X[i,j,ii] + X[ii,j,i] <= Y[i,j]; "
        },
        {
            "display_name" : "Xijii at most 1 always => Xijii at most 1 if assigned",
            "inputs" : [
                "Xijii-AtMost1Always"
            ],
            "outputs" : [
                "Xijii-AtMost1IfAssigned"
            ],
            "description" : "Logical O-node."
        },
        {
            "display_name" : "Xijii at least 1 always => Xijii at least 1 if assigned",
            "inputs" : [
                "Xijii-AtLeast1Always"
            ],
            "outputs" : [
                "Xijii-AtLeast1IfAssigned"
            ],
            "description" : "Logical O-node."
        },
        {
            "display_name" : "Sequencing by Completion and Assignments",
            "inputs" : [
                "Si-Exact",
                "Ci-Allowing",
                "Yij-Allowing",
                "Xijii-AtLeast1IfAssigned"
            ],
            "outputs" : [
                "Sequencing"
            ],
            "description" : "Constraint to enforce starting time of a later task to be greater to an earlier task if assigned to the same unit.",
            "gmpl" : "s.t. Sequencing_by_Completion_and_Assignments{(i,j,ii) in I_in_J_before_II} : S[ii] >= C[i] - M * ( 3 - Y[i,j] - Y[ii,j] - X[i,j,ii] );"
        },
        {
            "display_name" : "Sequencing by Completion",
            "inputs" : [
                "Si-Exact",
                "Ci-Allowing",
                "Xijii-AtLeast1IfAssigned",
                "Xijii-AtMost1IfAssigned",
                "Xijii-ZeroIfUnassigned"
            ],
            "outputs" : [
                "Sequencing"
            ],
            "description" : "Constraint to enforce starting time of a later task to be greater to an earlier task if assigned to the same unit.",
            "gmpl" : "s.t. Sequencing_by_Completion_and_Assignments{(i,j,ii) in I_in_J_before_II} : S[ii] >= C[i] - M * ( 1 - X[i,j,ii] );"
        }
    ],
    "problem": {
        "products": [
            "Yij-Allowing",
            "MS-Allowing",
            "UIS-Precedence",
            "Sequencing"
        ],
        "raw_materials": [
            "Yij-Free", 
            "Si-Exact",
            "Ci-Free",
            "MS-Free",
            "Xijii-Free",
            "FORBIDDENPRODUCT"
        ]
    },
    "global_statements": {
        "pre" : [
            "set I;",
            "set J;",
            "set I_precedes_II within I cross I;",
            "param NOVALUE := -1;",
            "param pt{I,J}, default NOVALUE;",
            "set Ij{j in J} := setof {i in I: pt[i,j] != NOVALUE} i;",
            "set Ji{i in I} := setof {j in J: pt[i,j] != NOVALUE} j;",
            "set I_in_J := setof{i in I, j in Ji[i]} (i,j);",
            "set I_in_J_before_II := setof{i in I, ii in I, j in Ji[i] inter Ji[ii]: i!=ii} (i,j,ii);",
            "set I_before_II := setof{i in I, ii in I, j in Ji[i] inter Ji[ii]: i!=ii} (i,ii);",
            "param M := sum{(i,j) in I_in_J} pt[i,j];",
            "#"
        ],
        "post" : [
            "minimize MAKESPAN: MS;",
            "solve;",
            "printf \"%d\\n\", MS;"
        ]
    }
}